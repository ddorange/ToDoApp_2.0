(function(){    'use strict';    var AppModel,        NoteModel,        NoteCollection,        AppView,        ListView,        NoteView,        DetailView,        AppRouter;    // Model    AppModel = Backbone.Model.extend({        defaults: {            state: ''        },        STATE: {            LIST: 'list',            DETAIL: 'detail'        },        beList: function(){            this.set('state', this.STATE.LIST);        },        beDetail: function(){            this.set('state', this.STATE.DETAIL);        }    });    NoteModel = Backbone.Model.extend({        defaults: {            title: '',            content: ''        },        initialize: function(){            this.on('invalid', function(model, error){ alert(error); });        },        validate: function(attrs){            console.log('NoteModel validate');            if(_.isEmpty(attrs.title) ||  _.isEmpty(attrs.content)){                return 'Opps! Title or Content Must Not Empty.';            }        }    });    // Collection    NoteCollection = Backbone.Collection.extend({        localStorage: new Backbone.LocalStorage('App')    });    // View    AppView = Backbone.View.extend({        el: '#js-app',        events: {            'click #js-add':    'handleAddBtn',            'click #js-return': 'handleBackBtn'        },        initialize: function() {            this.$menu = this.$('#js-menu_view');            this.$addBtn = this.$('#js-add');            this.$returnBtn = this.$('#js-return');            this.listenTo(this.model, 'change:state', this.render);        },        render: function() {            var state = this.model.get('state');            if (state === 'list') {                this.$addBtn.show();                this.$returnBtn.hide();            } else if (state === 'detail') {                this.$addBtn.hide();                this.$returnBtn.show();            } else {                console.log('error');            }                        return this;        },        handleAddBtn: function(){            Backbone.history.navigate('detail/new', {trigger: true});        },        handleBackBtn: function(){            app.notes.trigger('HIDE_DETAIL');        }    });    ListView = Backbone.View.extend({        el: '#js-list_view',        initialize: function(){            this.listenTo(this.collection, 'add', this.addOne);            this.listenTo(this.collection, 'reset', this.addAll);            this.listenTo(this.collection, 'SHOW_LIST', this.render);            this.listenTo(this.collection, 'ADD_NEW_NOTE', this.hide);            this.listenTo(this.collection, 'OPEN_NOTE', this.hide);                        this.collection.fetch({reset: true});            this.render();        },        render: function() {            this.$el.show();            return this;        },        hide: function(){            this.$el.hide();        },        addOne: function(note){            var view = new NoteView({ model: note });            this.el.appendChild(view.render().el);        },        addAll: function(){            this.$el.html('');            app.notes.each(this.addOne, this);        }    });    NoteView = Backbone.View.extend({        tagName: 'li',        className: 'list__item',        template: _.template( $('#tmp-note').html() ),        events: {            'click .list__item__title': 'showDetail',            'click .list__item__remove': 'removeOne'        },        initialize: function() {            this.model.on('change', this.render, this);            this.model.on('destroy', this.remove, this);        },        render: function() {            var template = this.template( this.model.toJSON() );            this.$el.html(template);            return this;        },        showDetail: function(){            Backbone.history.navigate('detail/' + this.model.id, {trigger: true});        },        removeOne: function() {            if(confirm('Are You Sure ?')){                this.model.destroy();            }        }    });    DetailView = Backbone.View.extend({        el: '#js-detail_view',        model: null,        initialize: function() {            this.$title = this.$('#js-detail_title');            this.$content = this.$('#js-detail_body');            this.listenTo(this.collection, 'ADD_NEW_NOTE', this.openNew);            this.listenTo(this.collection, 'OPEN_NOTE', this.openNote);            this.listenTo(this.collection, 'HIDE_DETAIL', this.back);        },        render: function(){            this.$el.show();            return this;        },        hide: function(){            this.$title.val('');            this.$content.val('');            this.$el.hide();        },        openNew: function(){            this.render();        },        openNote: function(id){            this.model = this.collection.get(id);            this.$title.val( this.model.get('title') );            this.$content.val( this.model.get('content') );            this.render();        },        back: function(){            var obj = this.newAttributes();            if(obj){                if(this.model){                    // 既存ノートの場合                    this.model.save(obj);                    this.model = null;                } else {                    // 新規ノートの場合                    var isSuccess = app.notes.create(obj);                    console.log('isSuccess=' ,isSuccess);                }                this.hide();                Backbone.history.navigate('', {trigger: true});            }        },        newAttributes: function () {            var title = this.$title.val(),                content  = this.$content.val(),                obj;                        if(_.isEmpty(title) || _.isEmpty(content)){                alert('Opps! Title or Content Must Not be Empty.');                return;            } else {                obj = { title: title, content: content };            }            return obj;        }    });    AppRouter = Backbone.Router.extend({        routes: {            '': 'setList',            'detail/:id': 'setDetail'        },        initialize: function() {            this.model = app.state;        },        setList: function(){            this.model.beList();            app.notes.trigger('SHOW_LIST');        },        setDetail: function(id){            this.model.beDetail();            if(id === 'new'){                app.notes.trigger('ADD_NEW_NOTE');            } else {                app.notes.trigger('OPEN_NOTE', id);            }        }    });    // インスタンスの作成    var app = {};    app.state = new AppModel();    app.router = new AppRouter();    app.notes = new NoteCollection({ model: NoteModel });    app.mainView = new AppView({ model: app.state });    app.listView = new ListView({ collection: app.notes });    app.detailView = new DetailView({ collection: app.notes });        window.app = app;    Backbone.history.start();})();